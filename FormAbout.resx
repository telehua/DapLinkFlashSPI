<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AhawgHvA/wNjuucYAvhk4wAAAABJRU5ErkJggg==
</value>
  </data>
</root>